function cov_1zazr91pwm(){var path="C:\\Users\\carst\\OneDrive\\Desktop\\Coding\\Thinkful\\decoder-project\\src\\caesar.js";var hash="3a5a3e6f5ba9998d8e50dfd41158215870558729";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\carst\\OneDrive\\Desktop\\Coding\\Thinkful\\decoder-project\\src\\caesar.js",statementMap:{"0":{start:{line:6,column:21},end:{line:29,column:4}},"1":{start:{line:10,column:4},end:{line:12,column:3}},"2":{start:{line:11,column:6},end:{line:11,column:19}},"3":{start:{line:13,column:17},end:{line:13,column:122}},"4":{start:{line:14,column:15},end:{line:22,column:13}},"5":{start:{line:15,column:6},end:{line:21,column:7}},"6":{start:{line:16,column:10},end:{line:16,column:98}},"7":{start:{line:17,column:12},end:{line:21,column:7}},"8":{start:{line:18,column:10},end:{line:18,column:98}},"9":{start:{line:20,column:10},end:{line:20,column:24}},"10":{start:{line:23,column:2},end:{line:23,column:16}},"11":{start:{line:26,column:2},end:{line:28,column:4}},"12":{start:{line:31,column:0},end:{line:31,column:49}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:22},end:{line:6,column:23}},loc:{start:{line:6,column:34},end:{line:29,column:1}},line:6},"1":{name:"caesar",decl:{start:{line:9,column:11},end:{line:9,column:17}},loc:{start:{line:9,column:47},end:{line:24,column:3}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:14,column:35},end:{line:14,column:36}},loc:{start:{line:14,column:46},end:{line:22,column:3}},line:14}},branchMap:{"0":{loc:{start:{line:9,column:32},end:{line:9,column:45}},type:"default-arg",locations:[{start:{line:9,column:41},end:{line:9,column:45}}],line:9},"1":{loc:{start:{line:10,column:4},end:{line:12,column:3}},type:"if",locations:[{start:{line:10,column:4},end:{line:12,column:3}},{start:{line:10,column:4},end:{line:12,column:3}}],line:10},"2":{loc:{start:{line:10,column:8},end:{line:10,column:57}},type:"binary-expr",locations:[{start:{line:10,column:8},end:{line:10,column:14}},{start:{line:10,column:18},end:{line:10,column:28}},{start:{line:10,column:32},end:{line:10,column:43}},{start:{line:10,column:47},end:{line:10,column:57}}],line:10},"3":{loc:{start:{line:15,column:6},end:{line:21,column:7}},type:"if",locations:[{start:{line:15,column:6},end:{line:21,column:7}},{start:{line:15,column:6},end:{line:21,column:7}}],line:15},"4":{loc:{start:{line:15,column:10},end:{line:15,column:60}},type:"binary-expr",locations:[{start:{line:15,column:10},end:{line:15,column:50}},{start:{line:15,column:54},end:{line:15,column:60}}],line:15},"5":{loc:{start:{line:17,column:12},end:{line:21,column:7}},type:"if",locations:[{start:{line:17,column:12},end:{line:21,column:7}},{start:{line:17,column:12},end:{line:21,column:7}}],line:17},"6":{loc:{start:{line:17,column:16},end:{line:17,column:67}},type:"binary-expr",locations:[{start:{line:17,column:16},end:{line:17,column:56}},{start:{line:17,column:60},end:{line:17,column:67}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0},b:{"0":[0],"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3a5a3e6f5ba9998d8e50dfd41158215870558729"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1zazr91pwm=function(){return actualCoverage;};}return actualCoverage;}cov_1zazr91pwm();// Please refrain from tampering with the setup code provided here,
// as the index.html and test files rely on this setup to work properly.
// Only add code (helper methods, variables, etc.) within the scope
// of the anonymous function on line 6
const caesarModule=(cov_1zazr91pwm().s[0]++,function(){cov_1zazr91pwm().f[0]++;// you can add any code you want within this function scope
function caesar(input,shift,encode=(cov_1zazr91pwm().b[0][0]++,true)){cov_1zazr91pwm().f[1]++;cov_1zazr91pwm().s[1]++;if((cov_1zazr91pwm().b[2][0]++,!shift)||(cov_1zazr91pwm().b[2][1]++,shift===0)||(cov_1zazr91pwm().b[2][2]++,shift<-25)||(cov_1zazr91pwm().b[2][3]++,shift>25)){cov_1zazr91pwm().b[1][0]++;cov_1zazr91pwm().s[2]++;return false;}else{cov_1zazr91pwm().b[1][1]++;}let alphabet=(cov_1zazr91pwm().s[3]++,["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]);let result=(cov_1zazr91pwm().s[4]++,input.split('').map(charVar=>{cov_1zazr91pwm().f[2]++;cov_1zazr91pwm().s[5]++;//["n,"g","o","n"," "]
if((cov_1zazr91pwm().b[4][0]++,alphabet.includes(charVar.toLowerCase()))&&(cov_1zazr91pwm().b[4][1]++,encode)){cov_1zazr91pwm().b[3][0]++;cov_1zazr91pwm().s[6]++;//Is this a letter or a space?
return String.fromCharCode(((charVar.toLowerCase().charCodeAt()+shift-97)%26+26)%26+97);//If so, apply shift for encoding and add to newly created array via map
}else{cov_1zazr91pwm().b[3][1]++;cov_1zazr91pwm().s[7]++;if((cov_1zazr91pwm().b[6][0]++,alphabet.includes(charVar.toLowerCase()))&&(cov_1zazr91pwm().b[6][1]++,!encode)){cov_1zazr91pwm().b[5][0]++;cov_1zazr91pwm().s[8]++;//Still, is this a letter?
return String.fromCharCode(((charVar.toLowerCase().charCodeAt()-shift-97)%26+26)%26+97);}else{cov_1zazr91pwm().b[5][1]++;cov_1zazr91pwm().s[9]++;//Otherwise, this is a space and we need to insert it to the array as is
return charVar;}}}).join(''));cov_1zazr91pwm().s[10]++;return result;}cov_1zazr91pwm().s[11]++;return{caesar};}());cov_1zazr91pwm().s[12]++;module.exports={caesar:caesarModule.caesar};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhZXNhci5qcyJdLCJuYW1lcyI6WyJjYWVzYXJNb2R1bGUiLCJjYWVzYXIiLCJpbnB1dCIsInNoaWZ0IiwiZW5jb2RlIiwiYWxwaGFiZXQiLCJyZXN1bHQiLCJzcGxpdCIsIm1hcCIsImNoYXJWYXIiLCJpbmNsdWRlcyIsInRvTG93ZXJDYXNlIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY2hhckNvZGVBdCIsImpvaW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoieTFHQWVZOzJGQWZaO0FBQ0E7QUFDQTtBQUNBO0FBRUEsS0FBTUEsQ0FBQUEsWUFBWSwwQkFBSSxVQUFZLHlCQUNoQztBQUVBLFFBQVNDLENBQUFBLE1BQVQsQ0FBZ0JDLEtBQWhCLENBQXVCQyxLQUF2QixDQUE4QkMsTUFBTSw2QkFBRyxJQUFILENBQXBDLENBQTZDLGlEQUMzQyxHQUFJLDZCQUFDRCxLQUFELCtCQUFVQSxLQUFLLEdBQUksQ0FBbkIsK0JBQXdCQSxLQUFLLENBQUcsQ0FBQyxFQUFqQywrQkFBdUNBLEtBQUssQ0FBRyxFQUEvQyxDQUFKLENBQXNELG9EQUNwRCxNQUFPLE1BQVAsQ0FDSCxDQUZDLGlDQUdGLEdBQUlFLENBQUFBLFFBQVEsMEJBQUcsQ0FBQyxHQUFELENBQUssR0FBTCxDQUFTLEdBQVQsQ0FBYSxHQUFiLENBQWlCLEdBQWpCLENBQXFCLEdBQXJCLENBQXlCLEdBQXpCLENBQTZCLEdBQTdCLENBQWlDLEdBQWpDLENBQXFDLEdBQXJDLENBQXlDLEdBQXpDLENBQTZDLEdBQTdDLENBQWlELEdBQWpELENBQXFELEdBQXJELENBQXlELEdBQXpELENBQTZELEdBQTdELENBQWlFLEdBQWpFLENBQXFFLEdBQXJFLENBQXlFLEdBQXpFLENBQTZFLEdBQTdFLENBQWlGLEdBQWpGLENBQXFGLEdBQXJGLENBQXlGLEdBQXpGLENBQTZGLEdBQTdGLENBQWlHLEdBQWpHLENBQXFHLEdBQXJHLENBQUgsQ0FBWixDQUNBLEdBQUlDLENBQUFBLE1BQU0sMEJBQUdKLEtBQUssQ0FBQ0ssS0FBTixDQUFZLEVBQVosRUFBZ0JDLEdBQWhCLENBQW9CQyxPQUFPLEVBQUksaURBQUU7QUFDMUMsR0FBSSw0QkFBQUosUUFBUSxDQUFDSyxRQUFULENBQWtCRCxPQUFPLENBQUNFLFdBQVIsRUFBbEIsZ0NBQTRDUCxNQUE1QyxDQUFKLENBQXVELG9EQUFFO0FBQ3JELE1BQU9RLENBQUFBLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQixDQUFDLENBQUNKLE9BQU8sQ0FBQ0UsV0FBUixHQUFzQkcsVUFBdEIsR0FBbUNYLEtBQW5DLENBQXlDLEVBQTFDLEVBQThDLEVBQTlDLENBQWlELEVBQWxELEVBQXNELEVBQXRELENBQXlELEVBQTdFLENBQVAsQ0FBeUY7QUFDNUYsQ0FGRCxJQUVNLHVEQUFJLDRCQUFBRSxRQUFRLENBQUNLLFFBQVQsQ0FBa0JELE9BQU8sQ0FBQ0UsV0FBUixFQUFsQixnQ0FBNEMsQ0FBQ1AsTUFBN0MsQ0FBSixDQUF3RCxvREFBRTtBQUM1RCxNQUFPUSxDQUFBQSxNQUFNLENBQUNDLFlBQVAsQ0FBb0IsQ0FBQyxDQUFDSixPQUFPLENBQUNFLFdBQVIsR0FBc0JHLFVBQXRCLEdBQW1DWCxLQUFuQyxDQUF5QyxFQUExQyxFQUE4QyxFQUE5QyxDQUFpRCxFQUFsRCxFQUFzRCxFQUF0RCxDQUF5RCxFQUE3RSxDQUFQLENBQ0gsQ0FGSyxJQUVELG9EQUFFO0FBQ0gsTUFBT00sQ0FBQUEsT0FBUCxDQUNILEVBQ0osQ0FSWSxFQVFWTSxJQVJVLENBUUwsRUFSSyxDQUFILENBQVYsQ0FMNkMseUJBYzdDLE1BQU9ULENBQUFBLE1BQVAsQ0FDQyxDQWxCK0IseUJBb0JoQyxNQUFPLENBQ0xMLE1BREssQ0FBUCxDQUdELENBdkJvQixFQUFILENBQWxCLEMseUJBeUJBZSxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsQ0FBRWhCLE1BQU0sQ0FBRUQsWUFBWSxDQUFDQyxNQUF2QixDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFBsZWFzZSByZWZyYWluIGZyb20gdGFtcGVyaW5nIHdpdGggdGhlIHNldHVwIGNvZGUgcHJvdmlkZWQgaGVyZSxcbi8vIGFzIHRoZSBpbmRleC5odG1sIGFuZCB0ZXN0IGZpbGVzIHJlbHkgb24gdGhpcyBzZXR1cCB0byB3b3JrIHByb3Blcmx5LlxuLy8gT25seSBhZGQgY29kZSAoaGVscGVyIG1ldGhvZHMsIHZhcmlhYmxlcywgZXRjLikgd2l0aGluIHRoZSBzY29wZVxuLy8gb2YgdGhlIGFub255bW91cyBmdW5jdGlvbiBvbiBsaW5lIDZcblxuY29uc3QgY2Flc2FyTW9kdWxlID0gKGZ1bmN0aW9uICgpIHtcbiAgLy8geW91IGNhbiBhZGQgYW55IGNvZGUgeW91IHdhbnQgd2l0aGluIHRoaXMgZnVuY3Rpb24gc2NvcGVcblxuICBmdW5jdGlvbiBjYWVzYXIoaW5wdXQsIHNoaWZ0LCBlbmNvZGUgPSB0cnVlKSB7XG4gICAgaWYgKCFzaGlmdCB8fCBzaGlmdCA9PT0wIHx8IHNoaWZ0IDwgLTI1IHx8IHNoaWZ0ID4gMjUpe1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGxldCBhbHBoYWJldCA9IFtcImFcIixcImJcIixcImNcIixcImRcIixcImVcIixcImZcIixcImdcIixcImhcIixcImlcIixcImpcIixcImtcIixcImxcIixcIm1cIixcIm5cIixcIm9cIixcInBcIixcInFcIixcInJcIixcInNcIixcInRcIixcInVcIixcInZcIixcIndcIixcInhcIixcInlcIixcInpcIl07XG4gIGxldCByZXN1bHQgPSBpbnB1dC5zcGxpdCgnJykubWFwKGNoYXJWYXIgPT4geyAvL1tcIm4sXCJnXCIsXCJvXCIsXCJuXCIsXCIgXCJdXG4gICAgICBpZiAoYWxwaGFiZXQuaW5jbHVkZXMoY2hhclZhci50b0xvd2VyQ2FzZSgpKSAmJiBlbmNvZGUpeyAvL0lzIHRoaXMgYSBsZXR0ZXIgb3IgYSBzcGFjZT9cbiAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSgoKGNoYXJWYXIudG9Mb3dlckNhc2UoKS5jaGFyQ29kZUF0KCkrc2hpZnQtOTcpJTI2KzI2KSUyNis5Nyk7IC8vSWYgc28sIGFwcGx5IHNoaWZ0IGZvciBlbmNvZGluZyBhbmQgYWRkIHRvIG5ld2x5IGNyZWF0ZWQgYXJyYXkgdmlhIG1hcFxuICAgICAgfWVsc2UgaWYgKGFscGhhYmV0LmluY2x1ZGVzKGNoYXJWYXIudG9Mb3dlckNhc2UoKSkgJiYgIWVuY29kZSl7IC8vU3RpbGwsIGlzIHRoaXMgYSBsZXR0ZXI/XG4gICAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoKChjaGFyVmFyLnRvTG93ZXJDYXNlKCkuY2hhckNvZGVBdCgpLXNoaWZ0LTk3KSUyNisyNiklMjYrOTcpO1xuICAgICAgfWVsc2V7IC8vT3RoZXJ3aXNlLCB0aGlzIGlzIGEgc3BhY2UgYW5kIHdlIG5lZWQgdG8gaW5zZXJ0IGl0IHRvIHRoZSBhcnJheSBhcyBpc1xuICAgICAgICAgIHJldHVybiBjaGFyVmFyXG4gICAgICB9XG4gIH0pLmpvaW4oJycpO1xuICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBjYWVzYXIsXG4gIH07XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgY2Flc2FyOiBjYWVzYXJNb2R1bGUuY2Flc2FyIH07XG4iXX0=